% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulate_POMDP.R
\name{simulate_POMDP}
\alias{simulate_POMDP}
\title{Simulate Trajectories in a POMDP}
\usage{
simulate_POMDP(
  model,
  n = 100,
  belief = NULL,
  horizon = NULL,
  return_beliefs = FALSE,
  epsilon = NULL,
  digits = 7,
  method = "cpp",
  verbose = FALSE
)
}
\arguments{
\item{model}{a POMDP model.}

\item{n}{number of trajectories.}

\item{belief}{probability distribution over the states for choosing the
starting states for the trajectories.
Defaults to the start belief state specified in
the model or "uniform".}

\item{horizon}{number of epochs for the simulation. If \code{NULL} then the
horizon for the model is used.}

\item{return_beliefs}{logical; Return all visited belief states? This requires n x horizon memory.}

\item{epsilon}{the probability of random actions for using an epsilon-greedy policy.
Default for solved models is 0 and for unsolved model 1.}

\item{digits}{round probabilities for belief points.}

\item{method}{\code{'r'} or \code{'cpp'} to perform simulation using an R or faster C++ implementation.}

\item{verbose}{report used parameters.}
}
\value{
A list with elements:
\itemize{
\item \code{avg_reward}: The average discounted reward.
\item \code{belief_states}: A matrix with belief states as rows.
\item \code{action_cnt}: Action counts.
\item \code{state_cnt}: State counts.
\item \code{reward}: Reward for each trajectory.
}
}
\description{
Simulate trajectories through a POMDP. The start state for each
trajectory is randomly chosen using the specified belief. The belief is used to choose actions
from the the epsilon-greedy policy and then updated using observations.
}
\examples{
data(Tiger)

# solve the POMDP for 5 epochs and no discounting
sol <- solve_POMDP(Tiger, horizon = 5, discount = 1, method = "enum")
sol
policy(sol)

## Example 1: simulate 10 trajectories
sim <- simulate_POMDP(sol, n = 100, verbose = TRUE)
sim

# calculate the percentage that each action is used in the simulation
sim$action_cnt / sum(sim$action_cnt)

# reward distribution
hist(sim$reward)

## Example 2: look at all belief states in the trajectory starting with an initial start belief.
sim <- simulate_POMDP(sol, n = 100, belief = c(.5, .5), return_beliefs = TRUE)
head(sim$belief_states)

# plot with added density
plot_belief_space(sol, sample = sim$belief_states, ylim = c(0,5), jitter = 1)
lines(density(sim$belief_states[, 1], bw = .02)); axis(2); title(ylab = "Density")


## Example 3: simulate trajectories for an unsolved POMDP which uses an epsilon of 1
#             (i.e., all actions are randomized)
sim <- simulate_POMDP(Tiger, n = 100, horizon = 5, return_beliefs = TRUE, verbose = TRUE)
sim$avg_reward

plot_belief_space(sol, sample = sim$belief_states, ylim = c(0,6), jitter = 1)
lines(density(sim$belief_states[, 1], bw = .05)); axis(2); title(ylab = "Density")
}
\seealso{
Other POMDP: 
\code{\link{POMDP}()},
\code{\link{matrix_extractions}},
\code{\link{plot_belief_space}()},
\code{\link{sample_belief_space}()},
\code{\link{solve_POMDP}()},
\code{\link{solve_SARSOP}()},
\code{\link{update_belief}()},
\code{\link{write_POMDP}()}
}
\author{
Michael Hahsler
}
\concept{POMDP}
