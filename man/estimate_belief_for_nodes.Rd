% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/estimate_belief_for_nodes.R
\name{estimate_belief_for_nodes}
\alias{estimate_belief_for_nodes}
\title{Estimate the Belief for Policy Graph Nodes}
\usage{
estimate_belief_for_nodes(x, method = "auto", epoch = 1, ...)
}
\arguments{
\item{x}{object of class \link{POMDP} containing a solved and converged POMDP problem.}

\item{method}{character string specifying the estimation method.}

\item{epoch}{estimate the belief for nodes in this epoch. Use 1 for converged policies.}

\item{...}{parameters are passed on to \code{sample_belief_space()}.}
}
\value{
returns a matrix with a belief for each policy graph node.
}
\description{
Estimate a belief for each alpha vector which represents a node in the policy graph.
}
\details{
\code{estimate_belief_for_nodes()} can estimate the belief in several ways:
\enumerate{
\item \strong{Follow trajectories} till all policy graph nodes have been visited and return the encountered belief.
If some nodes are not reachable from the initial belief, then a NAs will be returned with a warning.
\item \strong{Sample a large set} of possible belief points, assigning them to the segments and then averaging
the belief over the points assigned to each segment. This will return a central belief for the node.
Additional parameters like \code{method} and the sample size \code{n} are passed on to \code{\link[=sample_belief_space]{sample_belief_space()}}.
If no belief point is generated for a segment, then a
warning is produced. In this case, the number of sampled points can be increased.
}
}
\examples{
data("Tiger")

## policy graphs for converged solutions
sol <- solve_POMDP(model = Tiger)
sol

estimate_belief_for_nodes(sol)

estimate_belief_for_nodes(sol, method = "random")
}
\seealso{
Other policy: 
\code{\link{optimal_action}()},
\code{\link{plot_belief_space}()},
\code{\link{plot_value_function}()},
\code{\link{policy_graph}()},
\code{\link{policy}()},
\code{\link{projection}()},
\code{\link{reward}()},
\code{\link{solve_POMDP}()},
\code{\link{solve_SARSOP}()}
}
\concept{policy}
