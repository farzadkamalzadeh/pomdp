# Generated by roxygen2: do not edit by hand

S3method(add_policy,MDP)
S3method(add_policy,POMDP)
S3method(plot_value_function,MDP)
S3method(plot_value_function,POMDP)
S3method(policy,MDP)
S3method(policy,POMDP)
S3method(print,MDP)
S3method(print,POMDP)
S3method(print,text)
S3method(value_function,MDP)
S3method(value_function,POMDP)
export(MDP)
export(MDP2POMDP)
export(O_)
export(POMDP)
export(R_)
export(T_)
export(absorbing_states)
export(add_policy)
export(approx_MDP_policy_evaluation)
export(colors_continuous)
export(colors_discrete)
export(curve_multiple_directed)
export(epoch_to_episode)
export(estimate_belief_for_nodes)
export(greedy_MDP_action)
export(is_converged_POMDP)
export(is_solved_MDP)
export(is_solved_POMDP)
export(is_timedependent_POMDP)
export(normalize_MDP)
export(normalize_POMDP)
export(observation_matrix)
export(observation_val)
export(optimal_action)
export(plot_Maze_solution)
export(plot_belief_space)
export(plot_policy_graph)
export(plot_value_function)
export(policy)
export(policy_graph)
export(projection)
export(q_values_MDP)
export(random_MDP_policy)
export(read_POMDP)
export(regret)
export(reward)
export(reward_matrix)
export(reward_node_action)
export(reward_val)
export(round_stochastic)
export(sample_belief_space)
export(simulate_MDP)
export(simulate_POMDP)
export(solve_MDP)
export(solve_MDP_DP)
export(solve_MDP_TD)
export(solve_POMDP)
export(solve_POMDP_parameter)
export(solve_SARSOP)
export(start_vector)
export(transition_graph)
export(transition_matrix)
export(transition_val)
export(update_belief)
export(value_function)
export(write_POMDP)
import(Rcpp)
import(igraph)
import(pomdpSolve)
importFrom(Matrix,Math)
importFrom(Matrix,Math2)
importFrom(Matrix,cBind)
importFrom(Matrix,coerce)
importFrom(Matrix,crossprod)
importFrom(Matrix,nnzero)
importFrom(Matrix,rBind)
importFrom(Matrix,spMatrix)
importFrom(foreach,"%dopar%")
importFrom(foreach,foreach)
importFrom(foreach,getDoParWorkers)
importFrom(foreach,times)
importFrom(graphics,abline)
importFrom(graphics,axis)
importFrom(graphics,barplot)
importFrom(graphics,box)
importFrom(graphics,image)
importFrom(graphics,legend)
importFrom(graphics,lines)
importFrom(graphics,plot)
importFrom(graphics,text)
importFrom(methods,as)
importFrom(processx,run)
importFrom(stats,runif)
importFrom(utils,head)
importFrom(utils,read.table)
importFrom(utils,tail)
importFrom(utils,type.convert)
useDynLib(pomdp, .registration=TRUE)
